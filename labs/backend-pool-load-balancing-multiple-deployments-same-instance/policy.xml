<policies>
    <inbound>
        <base />
        <authentication-managed-identity resource="https://cognitiveservices.azure.com" output-token-variable-name="managed-id-access-token" ignore-error="false" />
        <set-header name="Authorization" exists-action="override">
            <value>@("Bearer " + (string)context.Variables["managed-id-access-token"])</value>
        </set-header>
        <!--Dynamically select the backend pool based on the passed deployment-id.-->
        <set-backend-service backend-id="@("openai-backend-pool-" + context.Request.MatchedParameters["deployment-id"])" />
        <!--The backend url is of form https://openai1-vd2q3hyse4q3s.openai.azure.com/openai/gpt-35-turbo-0613. We need the rewrite-uri policy to ensure we remove the model (in form of the context.Request.MatchedParameters["deployment-id"])-->
        <rewrite-uri template="@{
            var deploymentId = context.Request.MatchedParameters["deployment-id"];
            var originalPath = context.Request.OriginalUrl.Path;
            var newPath = originalPath.Replace("/openai/deployments/" + deploymentId, "");
            return newPath;
        }" />
    </inbound>
    <backend>
        <!--Set count to one less than the number of backends in the pool to try all backends until the backend pool is temporarily unavailable.-->
        <retry count="2" interval="0" first-fast-retry="true" condition="@(context.Response.StatusCode == 429 || (context.Response.StatusCode == 503 && !context.Response.StatusReason.Contains("Backend pool") && !context.Response.StatusReason.Contains("is temporarily unavailable")))">
            <forward-request buffer-request-body="true" />
        </retry>
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
        <choose>
            <!--Return a generic error that does not reveal backend pool details.-->
            <when condition="@(context.Response.StatusCode == 503)">
                <return-response>
                    <set-status code="503" reason="Service Unavailable" />
                </return-response>
            </when>
        </choose>
    </on-error>
</policies>
